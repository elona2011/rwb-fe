[{"/Users/yanjie/git/fake/rwb-fe/src/index.tsx":"1","/Users/yanjie/git/fake/rwb-fe/src/reportWebVitals.ts":"2","/Users/yanjie/git/fake/rwb-fe/src/App.tsx":"3","/Users/yanjie/git/fake/rwb-fe/src/pages/auth/index.tsx":"4","/Users/yanjie/git/fake/rwb-fe/src/pages/login/index.tsx":"5","/Users/yanjie/git/fake/rwb-fe/src/pages/layout/index.tsx":"6","/Users/yanjie/git/fake/rwb-fe/src/pages/taskBoard/TaskBoard.tsx":"7","/Users/yanjie/git/fake/rwb-fe/src/pages/sider/sider.tsx":"8","/Users/yanjie/git/fake/rwb-fe/src/pages/myAccount/myAccount.tsx":"9","/Users/yanjie/git/fake/rwb-fe/src/pages/myOrder/myOrder.tsx":"10","/Users/yanjie/git/fake/rwb-fe/src/pages/newTask/index.tsx":"11"},{"size":500,"mtime":1608692736912,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1608692736915,"results":"14","hashOfConfig":"13"},{"size":2104,"mtime":1609232811656,"results":"15","hashOfConfig":"13"},{"size":3192,"mtime":1609230507936,"results":"16","hashOfConfig":"13"},{"size":3317,"mtime":1609230502719,"results":"17","hashOfConfig":"13"},{"size":1073,"mtime":1609121231340,"results":"18","hashOfConfig":"13"},{"size":4192,"mtime":1609230464074,"results":"19","hashOfConfig":"13"},{"size":1880,"mtime":1609230523044,"results":"20","hashOfConfig":"13"},{"size":872,"mtime":1609213378900,"results":"21","hashOfConfig":"13"},{"size":1784,"mtime":1609155084478,"results":"22","hashOfConfig":"13"},{"size":3523,"mtime":1608889689986,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"f4phnx",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},"/Users/yanjie/git/fake/rwb-fe/src/index.tsx",[],["57","58"],"/Users/yanjie/git/fake/rwb-fe/src/reportWebVitals.ts",[],"/Users/yanjie/git/fake/rwb-fe/src/App.tsx",["59","60","61","62"],"import React, { createContext, useContext, useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  BrowserRouter\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport Login from './pages/login'\nimport LayoutMain from './pages/layout'\nimport { ProvideAuth, PrivateRoute } from './pages/auth'\nimport { Spin, Space } from 'antd';\nimport axios from \"axios\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false)\n  axios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    setLoading(true)\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n  // Add a response interceptor\n  axios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    setLoading(false)\n    return response;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    setLoading(false)\n    return Promise.reject(error);\n  });\n  return (\n    // <BrowserRouter basename=\"/admin\">\n      <div className=\"App\">\n        <ProvideAuth>\n          <Router>\n            <div>\n              {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n              <Switch>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <PrivateRoute path=\"/user\">\n                  <LayoutMain />\n                </PrivateRoute>\n                <Route path=\"/\">\n                  <Redirect\n                    to=\"/login\"\n                  />\n                </Route>\n              </Switch>\n              {loading && (<div className=\"loading\">\n                <Spin size=\"large\" />\n              </div>)}\n            </div>\n          </Router>\n        </ProvideAuth>\n      </div>\n    // </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/yanjie/git/fake/rwb-fe/src/pages/auth/index.tsx",["63","64","65","66","67"],"import React, { createContext, useEffect, useContext, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useHistory,\n    Redirect\n} from \"react-router-dom\";\nimport axios from 'axios';\n\nfunction getCookie(name: string) {\n    var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\n    if (match) return match[2];\n    return ''\n}\n\nconst authContext = createContext<{ user: string, signin: Function, loginUser: Function }>({\n    user: getCookie('name'),\n    signin: () => { },\n    loginUser: () => { }\n});\n\nconst useAuth = () => {\n    return useContext(authContext)\n}\n\nconst ProvideAuth = ({ children }: { children: React.ReactNode }) => {\n    const auth = useProvideAuth()\n\n    axios.interceptors.response.use(function (response) {\n\n        // Any status code that lie within the range of 2xx cause this function to trigger\n        // Do something with response data\n        return response;\n    }, function (error) {\n        if (error.response.status === 401) {\n            auth.signout()\n        }\n        return Promise.reject(error);\n    });\n\n    return (\n        <authContext.Provider value={auth}>\n            {children}\n        </authContext.Provider>\n    )\n}\n\nconst useProvideAuth = () => {\n    const [user, setUser] = useState(getCookie('name'));\n\n    const signin = (username: string, password: string, captcha: string, success: Function, fail: Function) => {\n        let data = new FormData()\n        data.append('name', username)\n        data.append('password', password)\n        data.append('captcha', captcha)\n        axios({\n            method: 'post',\n            url: '/tasks/login',\n            data,\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then(res => {\n            // console.log(res.data)\n            if (res.data === 'Success') {\n                setUser(username);\n                success()\n            }\n        }).catch(rej => {\n            if (rej.response.status === 401) {\n                setUser('');\n                fail(rej.response.data)\n            }\n        })\n    };\n\n    const signout = () => {\n        setUser('')\n    }\n    const loginUser = (u: string) => {\n        setUser(u)\n    }\n\n    return {\n        user,\n        signin,\n        signout,\n        loginUser\n    };\n}\n\ninterface Props {\n    children: React.ReactNode;\n    path: string;\n    elementType?: keyof JSX.IntrinsicElements;\n}\n\nfunction PrivateRoute({ children, ...rest }: Props) {\n    let auth = useAuth();\n    // useEffect(() => {\n    //     axios.get('/tasks/isLogin').then(res => {\n    //         auth.loginUser(res.data.result)\n    //     })\n    // })\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                auth.user ? (\n                    children\n                ) : (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: { from: location }\n                            }}\n                        />\n                    )\n            }\n        />\n    );\n}\n\nexport { useAuth, ProvideAuth, PrivateRoute } ","/Users/yanjie/git/fake/rwb-fe/src/pages/login/index.tsx",["68","69","70","71","72","73","74"],"import { Form, Input, Button, Checkbox, message, Row, Col } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './login.css';\nimport { useAuth } from '../auth'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useHistory,\n    Redirect\n} from \"react-router-dom\";\nimport axios from 'axios'\nimport { useState, useEffect } from 'react';\n\nconst Login = () => {\n    let auth = useAuth()\n    let history = useHistory()\n\n    const onFinish = ({ username, password, captcha }: { username: string, password: string, captcha: string }) => {\n        auth.signin(username, password, captcha, () => {\n            history.push('/user/taskboard')\n        }, (d: string) => {\n            message.error(d)\n        })\n    };\n    let [captchaimg, setCaptchaimg] = useState<string>()\n    useEffect(() => {\n        axios.get('/tasks/getcaptcha', {\n            responseType: 'blob'\n        }).then(res => {\n            setCaptchaimg(URL.createObjectURL(res.data))\n        })\n    }, [])\n    const refresh = () => {\n        axios.get('/tasks/refreshcaptcha', {\n            responseType: 'blob'\n        }).then(res => {\n            setCaptchaimg(URL.createObjectURL(res.data))\n        })\n    }\n\n    return (\n        <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >\n            <Form.Item\n                name=\"username\"\n                rules={[{ required: true, message: '请输入您的账号!' }]}\n            >\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"账号\" />\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                rules={[{ required: true, message: '请输入您的密码!' }]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"密码\"\n                />\n            </Form.Item>\n\n            {(captchaimg && <Form.Item label=\"验证码\">\n                <Row gutter={8}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"captcha\"\n                            noStyle\n                            rules={[{ required: true, message: '请输入验证码' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <img src={captchaimg} onClick={refresh}></img>\n                    </Col>\n                </Row>\n            </Form.Item>)}\n            {/* <Form.Item>\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <a className=\"login-form-forgot\" href=\"\">\n                    Forgot password\n            </a>\n            </Form.Item> */}\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                    登陆\n            </Button>\n                {/* Or <a href=\"\">register now!</a> */}\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Login","/Users/yanjie/git/fake/rwb-fe/src/pages/layout/index.tsx",["75","76","77"],"import { Layout, Menu, Breadcrumb, } from 'antd';\nimport { Route, useRouteMatch, Switch } from 'react-router-dom';\nimport SiderLeft from '../sider/sider'\nimport TaskBoard from '../taskBoard/TaskBoard'\nimport NewTask from '../newTask'\nimport MyOrder from '../myOrder/myOrder'\nimport MyAccount from '../myAccount/myAccount'\n\nconst LayoutMain = () => {\n    let { path, url } = useRouteMatch()\n    return (\n        <Layout style={{ minHeight: '100vh' }}>\n            <SiderLeft></SiderLeft>\n            <Switch>\n                <Route exact path={`${path}/taskboard`}>\n                    <TaskBoard></TaskBoard>\n                </Route>\n                <Route exact path={`${path}/newtask`}>\n                    <NewTask></NewTask>\n                </Route>\n                <Route exact path={`${path}/myorders`}>\n                    <MyOrder></MyOrder>\n                </Route>\n                <Route exact path={`${path}/account`}>\n                    <MyAccount></MyAccount>\n                </Route>\n            </Switch>\n        </Layout>\n    )\n}\n\nexport default LayoutMain","/Users/yanjie/git/fake/rwb-fe/src/pages/taskBoard/TaskBoard.tsx",["78","79","80"],"import { MouseEvent, useEffect, useState } from 'react'\nimport { Table, Upload, Space, Button } from 'antd';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\n\ninterface task {\n    id: number,\n    sitename: string,\n    QICQ: string,\n    balanceRate: string,\n    date: string,\n    percentage: string,\n    Appid: string,\n}\n\nconst Task = () => {\n    const [fileList, setFileList] = useState<UploadFile[]>([])\n\n    const columns = [\n        {\n            title: '任务名称',\n            dataIndex: 'sitename',\n            key: 'sitename',\n            render: (text: string) => <a>{text}</a>,\n        },\n        {\n            title: '虚拟币兑换比',\n            dataIndex: 'balanceRate',\n            key: 'balanceRate',\n        },\n        {\n            title: '用户分成',\n            dataIndex: 'percentage',\n            key: 'percentage',\n        },\n        {\n            title: '添加日期',\n            dataIndex: 'date',\n            key: 'date',\n        },\n        {\n            title: '操作',\n            dataIndex: 'action',\n            key: 'action',\n            render: (text: string, record: task) => (\n                <Space size=\"middle\">\n                    <a href={`http://proxy.xlcmll.top/Task/${record.Appid}?uid=${record.Appid}`} target=\"_blank\" rel=\"noreferrer\">任务地址</a>\n                    {/* <a href={`http://u.zrb.net/Task/${record.Appid}?uid=${record.Appid}`} target=\"_blank\" rel=\"noreferrer\">任务地址</a> */}\n                    <Upload\n                        name=\"avatar\"\n                        beforeUpload={() => false}\n                        fileList={fileList}\n                        onChange={(info) => {\n               \n                            setFileList([info.file])\n                            let data = new FormData()\n                            data.append('taskid', record.id + '');\n                            data.append('filename', info.file.name);\n                            // @ts-ignore zhushi\n                            data.append('qrimage', info.file);\n                            axios({\n                                method: 'post',\n                                url: '/tasks/addqrimage',\n                                data,\n                                headers: {\n                                    'Content-Type': 'multipart/form-data'\n                                }\n                            }).then(res => {\n                                if (res.data.code === 0) {\n\n                                }\n                            })\n                        }}>\n                        <Button icon={<UploadOutlined />}>上传二维码</Button>\n                    </Upload>\n                    <a onClick={() => handleDel(record.id)}>删除</a>\n                </Space>\n            ),\n        },\n    ];\n\n    const handleDel = (id: number) => {\n        let data = new FormData()\n        data.append('taskid', id + '')\n        axios({\n            method: 'post',\n            url: '/tasks/deltask',\n            data,\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then(res => {\n            if (res.data.code === 0) {\n                axios({\n                    method: 'post',\n                    url: '/tasks/tasklist',\n                }).then(res => {\n                    setData(res.data.result)\n                    // console.log(res)\n                })\n            }\n        })\n    }\n    const history = useHistory()\n    const newTask = (event: MouseEvent) => {\n        history.push('/user/newtask')\n    }\n    const [data, setData] = useState([])\n    useEffect(() => {\n        axios({\n            method: 'post',\n            url: '/tasks/tasklist',\n        }).then(res => {\n            setData(res.data.result)\n            // console.log(res)\n        })\n    }, [])\n    return (\n        <div>\n            <Button type=\"primary\" onClick={newTask}>新建任务</Button>\n            <Table columns={columns} dataSource={data} rowKey={'id'} />\n        </div>\n    )\n}\n\nexport default Task","/Users/yanjie/git/fake/rwb-fe/src/pages/sider/sider.tsx",["81","82","83","84","85","86","87","88","89","90"],"import { Layout, Menu, Breadcrumb } from 'antd';\nimport {\n    DesktopOutlined,\n    PieChartOutlined,\n    FileOutlined,\n    TeamOutlined,\n    UserOutlined,\n} from '@ant-design/icons';\nimport { ReactElement, useEffect, useState } from 'react';\nimport { MenuInfo } from 'rc-menu/lib/interface'\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst SiderLeft = () => {\n    const history = useHistory()\n    const location = useLocation()\n\n    let initKey = []\n    switch (location.pathname) {\n        case '/user/taskboard':\n            initKey.push('1')\n            break\n        case '/user/myorders':\n            initKey.push('2')\n            break\n        case '/user/account':\n            initKey.push('3')\n            break\n    }\n    const [menukey, setMenukey] = useState(initKey)\n\n    const menuClick = ({ item, key, domEvent, keyPath }: MenuInfo) => {\n        switch (key) {\n            case '1':\n                history.push('/user/taskboard')\n                break\n            case '2':\n                history.push('/user/myorders')\n                break\n            case '3':\n                history.push('/user/account')\n                break\n        }\n    }\n   \n    return (\n        <Sider collapsible>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={menukey} mode=\"inline\" onClick={menuClick}>\n                <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n                    任务\n                    </Menu.Item>\n                <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n                    订单\n                    </Menu.Item>\n                <Menu.Item key=\"3\" icon={<FileOutlined />}>\n                    我的账户\n                    </Menu.Item>\n            </Menu>\n        </Sider>\n    )\n}\n\nexport default SiderLeft","/Users/yanjie/git/fake/rwb-fe/src/pages/myAccount/myAccount.tsx",["91","92","93","94","95","96","97"],"import { MouseEvent, useEffect, useState } from 'react'\nimport { Table, Tag, Space, Button } from 'antd';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\ninterface task {\n    id: number,\n    sitename: string,\n    QICQ: string,\n    balanceRate: string,\n    date: string,\n    percentage: string,\n    Appid: string,\n}\nconst Account = () => {\n    const history = useHistory()\n    const logout = (event: MouseEvent) => {\n        history.push('/login')\n    }\n    // useEffect(() => {\n    //     axios({\n    //         method: 'post',\n    //         url: '/tasks/tasklist',\n    //     }).then(res => {\n    //         setData(res.data.result)\n    //         // console.log(res)\n    //     })\n    // }, [])\n    return (\n        <div>\n            <Button type=\"primary\" onClick={logout}>退出登陆</Button>\n        </div>\n    )\n}\n\nexport default Account","/Users/yanjie/git/fake/rwb-fe/src/pages/myOrder/myOrder.tsx",["98","99","100","101","102"],"import { MouseEvent, useEffect, useState } from 'react'\nimport { Table, Tag, Space, Button } from 'antd';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst columns = [\n    {\n        title: '时间',\n        dataIndex: 'date',\n        key: 'date',\n    },\n    {\n        title: '任务名',\n        dataIndex: 'sitename',\n        key: 'sitename',\n    },\n    {\n        title: '我的积分',\n        dataIndex: 'allpoints',\n        key: 'allpoints',\n    },\n    {\n        title: '用户积分',\n        dataIndex: 'points',\n        key: 'points',\n    },\n    {\n        title: '比例',\n        dataIndex: 'percentage',\n        key: 'percentage',\n    },\n    {\n        title: '订单名',\n        dataIndex: 'ordername',\n        key: 'ordername',\n    },\n];\n\ninterface order {\n    'Appid': string,\n    'date': string,\n    id: number,\n    orderid: string,\n    ordername: string,\n    percentage: string,\n    percentageNum: number,\n    points: number,\n    allpoints: string,\n    sitename: string,\n}\n\nconst Task = () => {\n    const [data, setData] = useState([])\n    useEffect(() => {\n        axios({\n            method: 'post',\n            url: '/tasks/myorders',\n        }).then(res => {\n            console.log(res.data)\n            if (res.data.code === 0) {\n                let result = res.data.result\n                result.forEach((n: order) => {\n                    n.percentageNum = parseInt(n.percentage)\n                    n.allpoints = (n.points * 100 / n.percentageNum).toFixed(1)\n                    n.percentage += '%'\n                })\n                setData(result)\n            }\n        })\n    }, [])\n\n    return (\n        <div>\n            <Table columns={columns} dataSource={data} rowKey={'id'} />\n        </div>\n    )\n}\n\nexport default Task","/Users/yanjie/git/fake/rwb-fe/src/pages/newTask/index.tsx",["103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"import { Form, Input, Button, Checkbox, message, Row, Col } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './index.css';\nimport { useAuth } from '../auth'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useHistory,\n    Redirect\n} from \"react-router-dom\";\nimport axios from 'axios'\nimport { useState, useEffect } from 'react';\n\ninterface FormParams {\n    sitename: string,\n    QICQ: string,\n    balanceName: string,\n    balanceRate: string,\n    percentage: string,\n}\nconst Login = () => {\n    let auth = useAuth()\n    let history = useHistory()\n\n    const onFinish = ({ sitename, QICQ, balanceName, balanceRate, percentage }: FormParams) => {\n        let data = new FormData()\n        data.append('sitename', sitename)\n        data.append('QICQ', QICQ)\n        data.append('balanceName', balanceName)\n        data.append('balanceRate', balanceRate)\n        data.append('percentage', percentage)\n        axios({\n            method: 'post',\n            url: '/tasks/newtask',\n            data,\n        }).then(res => {\n            if (res.data.code === 0) {\n                history.push('/user/taskboard')\n            }\n        })\n    };\n    let [captchaimg, setCaptchaimg] = useState<string>()\n    useEffect(() => {\n        axios.get('/tasks/getcaptcha', {\n            responseType: 'blob'\n        }).then(res => {\n            setCaptchaimg(URL.createObjectURL(res.data))\n        })\n    }, [])\n    const refresh = () => {\n        axios.get('/tasks/refreshcaptcha', {\n            responseType: 'blob'\n        }).then(res => {\n            setCaptchaimg(URL.createObjectURL(res.data))\n        })\n    }\n\n    return (\n        <Form\n            name=\"normal_login\"\n            // className=\"login-form\"\n            initialValues={{\n                sitename: 'c1',\n                QICQ: '99999',\n                balanceName: '积分',\n                balanceRate: '100',\n                percentage: '90',\n            }}\n            onFinish={onFinish}\n        >\n            <Form.Item\n                label=\"任务墙名称\"\n                name=\"sitename\"\n                rules={[{ required: true, message: '请输入任务墙名称!' }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label=\"客服QQ\"\n                name=\"QICQ\"\n                rules={[{ required: true, message: '请输入客服QQ!' }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label=\"虚拟币单位\"\n                name=\"balanceName\"\n                rules={[{ required: true, message: '请输入虚拟币单位!' }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label=\"虚拟币兑换比\"\n                name=\"balanceRate\"\n                rules={[{ required: true, message: '请输入虚拟币兑换比!' }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                label=\"用户分成比例\"\n                name=\"percentage\"\n                rules={[{ required: true, message: '请输入用户分成比例!' }]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                    提交\n            </Button>\n                {/* Or <a href=\"\">register now!</a> */}\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Login",["117","118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":30},{"ruleId":"123","severity":1,"message":"127","line":1,"column":32,"nodeType":"125","messageId":"126","endLine":1,"endColumn":42},{"ruleId":"123","severity":1,"message":"128","line":8,"column":3,"nodeType":"125","messageId":"126","endLine":8,"endColumn":16},{"ruleId":"123","severity":1,"message":"129","line":14,"column":16,"nodeType":"125","messageId":"126","endLine":14,"endColumn":21},{"ruleId":"123","severity":1,"message":"130","line":1,"column":32,"nodeType":"125","messageId":"126","endLine":1,"endColumn":41},{"ruleId":"123","severity":1,"message":"131","line":3,"column":22,"nodeType":"125","messageId":"126","endLine":3,"endColumn":28},{"ruleId":"123","severity":1,"message":"132","line":4,"column":5,"nodeType":"125","messageId":"126","endLine":4,"endColumn":11},{"ruleId":"123","severity":1,"message":"133","line":6,"column":5,"nodeType":"125","messageId":"126","endLine":6,"endColumn":9},{"ruleId":"123","severity":1,"message":"134","line":7,"column":5,"nodeType":"125","messageId":"126","endLine":7,"endColumn":15},{"ruleId":"123","severity":1,"message":"135","line":1,"column":31,"nodeType":"125","messageId":"126","endLine":1,"endColumn":39},{"ruleId":"123","severity":1,"message":"131","line":6,"column":22,"nodeType":"125","messageId":"126","endLine":6,"endColumn":28},{"ruleId":"123","severity":1,"message":"132","line":7,"column":5,"nodeType":"125","messageId":"126","endLine":7,"endColumn":11},{"ruleId":"123","severity":1,"message":"136","line":8,"column":5,"nodeType":"125","messageId":"126","endLine":8,"endColumn":10},{"ruleId":"123","severity":1,"message":"133","line":9,"column":5,"nodeType":"125","messageId":"126","endLine":9,"endColumn":9},{"ruleId":"123","severity":1,"message":"137","line":11,"column":5,"nodeType":"125","messageId":"126","endLine":11,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":79,"column":25,"nodeType":"140","endLine":79,"endColumn":65},{"ruleId":"123","severity":1,"message":"141","line":1,"column":18,"nodeType":"125","messageId":"126","endLine":1,"endColumn":22},{"ruleId":"123","severity":1,"message":"142","line":1,"column":24,"nodeType":"125","messageId":"126","endLine":1,"endColumn":34},{"ruleId":"123","severity":1,"message":"143","line":10,"column":17,"nodeType":"125","messageId":"126","endLine":10,"endColumn":20},{"ruleId":"123","severity":1,"message":"144","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":27},{"ruleId":"145","severity":1,"message":"146","line":26,"column":39,"nodeType":"140","endLine":26,"endColumn":42},{"ruleId":"145","severity":1,"message":"146","line":78,"column":21,"nodeType":"140","endLine":78,"endColumn":61},{"ruleId":"123","severity":1,"message":"142","line":1,"column":24,"nodeType":"125","messageId":"126","endLine":1,"endColumn":34},{"ruleId":"123","severity":1,"message":"147","line":6,"column":5,"nodeType":"125","messageId":"126","endLine":6,"endColumn":17},{"ruleId":"123","severity":1,"message":"148","line":7,"column":5,"nodeType":"125","messageId":"126","endLine":7,"endColumn":17},{"ruleId":"123","severity":1,"message":"149","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":22},{"ruleId":"123","severity":1,"message":"130","line":9,"column":24,"nodeType":"125","messageId":"126","endLine":9,"endColumn":33},{"ruleId":"123","severity":1,"message":"150","line":13,"column":9,"nodeType":"125","messageId":"126","endLine":13,"endColumn":15},{"ruleId":"123","severity":1,"message":"151","line":13,"column":17,"nodeType":"125","messageId":"126","endLine":13,"endColumn":24},{"ruleId":"123","severity":1,"message":"152","line":13,"column":26,"nodeType":"125","messageId":"126","endLine":13,"endColumn":32},{"ruleId":"123","severity":1,"message":"153","line":14,"column":9,"nodeType":"125","messageId":"126","endLine":14,"endColumn":16},{"ruleId":"123","severity":1,"message":"154","line":32,"column":21,"nodeType":"125","messageId":"126","endLine":32,"endColumn":31},{"ruleId":"123","severity":1,"message":"130","line":1,"column":22,"nodeType":"125","messageId":"126","endLine":1,"endColumn":31},{"ruleId":"123","severity":1,"message":"155","line":1,"column":33,"nodeType":"125","messageId":"126","endLine":1,"endColumn":41},{"ruleId":"123","severity":1,"message":"156","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":15},{"ruleId":"123","severity":1,"message":"157","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":20},{"ruleId":"123","severity":1,"message":"129","line":2,"column":22,"nodeType":"125","messageId":"126","endLine":2,"endColumn":27},{"ruleId":"123","severity":1,"message":"158","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":13},{"ruleId":"123","severity":1,"message":"159","line":6,"column":11,"nodeType":"125","messageId":"126","endLine":6,"endColumn":15},{"ruleId":"123","severity":1,"message":"160","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":20},{"ruleId":"123","severity":1,"message":"157","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":20},{"ruleId":"123","severity":1,"message":"129","line":2,"column":22,"nodeType":"125","messageId":"126","endLine":2,"endColumn":27},{"ruleId":"123","severity":1,"message":"161","line":2,"column":29,"nodeType":"125","messageId":"126","endLine":2,"endColumn":35},{"ruleId":"123","severity":1,"message":"134","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":20},{"ruleId":"123","severity":1,"message":"135","line":1,"column":31,"nodeType":"125","messageId":"126","endLine":1,"endColumn":39},{"ruleId":"123","severity":1,"message":"162","line":1,"column":41,"nodeType":"125","messageId":"126","endLine":1,"endColumn":48},{"ruleId":"123","severity":1,"message":"163","line":1,"column":50,"nodeType":"125","messageId":"126","endLine":1,"endColumn":53},{"ruleId":"123","severity":1,"message":"164","line":1,"column":55,"nodeType":"125","messageId":"126","endLine":1,"endColumn":58},{"ruleId":"123","severity":1,"message":"148","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":22},{"ruleId":"123","severity":1,"message":"165","line":2,"column":24,"nodeType":"125","messageId":"126","endLine":2,"endColumn":36},{"ruleId":"123","severity":1,"message":"131","line":6,"column":22,"nodeType":"125","messageId":"126","endLine":6,"endColumn":28},{"ruleId":"123","severity":1,"message":"132","line":7,"column":5,"nodeType":"125","messageId":"126","endLine":7,"endColumn":11},{"ruleId":"123","severity":1,"message":"136","line":8,"column":5,"nodeType":"125","messageId":"126","endLine":8,"endColumn":10},{"ruleId":"123","severity":1,"message":"133","line":9,"column":5,"nodeType":"125","messageId":"126","endLine":9,"endColumn":9},{"ruleId":"123","severity":1,"message":"137","line":11,"column":5,"nodeType":"125","messageId":"126","endLine":11,"endColumn":13},{"ruleId":"123","severity":1,"message":"166","line":24,"column":9,"nodeType":"125","messageId":"126","endLine":24,"endColumn":13},{"ruleId":"123","severity":1,"message":"167","line":44,"column":10,"nodeType":"125","messageId":"126","endLine":44,"endColumn":20},{"ruleId":"123","severity":1,"message":"168","line":52,"column":11,"nodeType":"125","messageId":"126","endLine":52,"endColumn":18},{"ruleId":"119","replacedBy":"169"},{"ruleId":"121","replacedBy":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'BrowserRouter' is defined but never used.","'Space' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'Checkbox' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Menu' is defined but never used.","'Breadcrumb' is defined but never used.","'url' is assigned a value but never used.","'UploadChangeParam' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'TeamOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'ReactElement' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'setMenukey' is assigned a value but never used.","'useState' is defined but never used.","'Table' is defined but never used.","'Tag' is defined but never used.","'axios' is defined but never used.","'task' is defined but never used.","'MouseEvent' is defined but never used.","'Button' is defined but never used.","'message' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'LockOutlined' is defined but never used.","'auth' is assigned a value but never used.","'captchaimg' is assigned a value but never used.","'refresh' is assigned a value but never used.",["171"],["172"],"no-global-assign","no-unsafe-negation"]