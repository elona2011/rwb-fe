[{"C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\index.tsx":"1","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\reportWebVitals.ts":"2","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\App.tsx":"3","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\layout\\index.tsx":"4","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\auth\\index.tsx":"5","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\myAccount\\myAccount.tsx":"6","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\taskBoard\\TaskBoard.tsx":"7","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\myOrder\\myOrder.tsx":"8","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\sider\\sider.tsx":"9","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\newTask\\index.tsx":"10","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\taskBoard\\QrUpload.tsx":"11","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\loginUser\\loginUser.tsx":"12","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\login\\login.tsx":"13","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\myOrder\\myOrder2.tsx":"14","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\players\\players.tsx":"15"},{"size":500,"mtime":1610779818952,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":2337,"mtime":1610779941700,"results":"19","hashOfConfig":"17"},{"size":1440,"mtime":1610036991020,"results":"20","hashOfConfig":"17"},{"size":3317,"mtime":1608966367202,"results":"21","hashOfConfig":"17"},{"size":4661,"mtime":1610036991031,"results":"22","hashOfConfig":"17"},{"size":3316,"mtime":1610036991046,"results":"23","hashOfConfig":"17"},{"size":1893,"mtime":1610036991034,"results":"24","hashOfConfig":"17"},{"size":2394,"mtime":1610036991041,"results":"25","hashOfConfig":"17"},{"size":3679,"mtime":1610036991099,"results":"26","hashOfConfig":"17"},{"size":1372,"mtime":1609654792939,"results":"27","hashOfConfig":"17"},{"size":3041,"mtime":1610036991027,"results":"28","hashOfConfig":"17"},{"size":4738,"mtime":1610771086652,"results":"29","hashOfConfig":"17"},{"size":1680,"mtime":1610036991036,"results":"30","hashOfConfig":"17"},{"size":2068,"mtime":1610790137793,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t7tk58",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\index.tsx",[],"C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\reportWebVitals.ts",[],["73","74"],"C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\App.tsx",["75","76","77","78"],"C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\layout\\index.tsx",["79","80","81"],"import { Layout, Menu, Breadcrumb, } from 'antd';\r\nimport { Route, useRouteMatch, Switch } from 'react-router-dom';\r\nimport SiderLeft from '../sider/sider'\r\nimport TaskBoard from '../taskBoard/TaskBoard'\r\nimport NewTask from '../newTask'\r\nimport MyOrder from '../myOrder/myOrder'\r\nimport MyAccount from '../myAccount/myAccount'\r\n\r\nconst LayoutMain = () => {\r\n    let { path, url } = useRouteMatch()\r\n    return (\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n            <SiderLeft></SiderLeft>\r\n            <Switch>\r\n                <Route exact path={`${path}/taskboard`}>\r\n                    <TaskBoard></TaskBoard>\r\n                </Route>\r\n                <Route exact path={`${path}/newtask`}>\r\n                    <NewTask></NewTask>\r\n                </Route>\r\n                <Route exact path={`${path}/myorders`}>\r\n                    <MyOrder></MyOrder>\r\n                </Route>\r\n                <Route exact path={`${path}/account`}>\r\n                    <MyAccount></MyAccount>\r\n                </Route>\r\n            </Switch>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default LayoutMain","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\auth\\index.tsx",["82","83","84","85","86"],"import React, { createContext, useEffect, useContext, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useHistory,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nfunction getCookie(name: string) {\r\n    var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\r\n    if (match) return match[2];\r\n    return ''\r\n}\r\n\r\nconst authContext = createContext<{ user: string, signin: Function, loginUser: Function }>({\r\n    user: getCookie('name'),\r\n    signin: () => { },\r\n    loginUser: () => { }\r\n});\r\n\r\nconst useAuth = () => {\r\n    return useContext(authContext)\r\n}\r\n\r\nconst ProvideAuth = ({ children }: { children: React.ReactNode }) => {\r\n    const auth = useProvideAuth()\r\n\r\n    axios.interceptors.response.use(function (response) {\r\n\r\n        // Any status code that lie within the range of 2xx cause this function to trigger\r\n        // Do something with response data\r\n        return response;\r\n    }, function (error) {\r\n        if (error.response.status === 401) {\r\n            auth.signout()\r\n        }\r\n        return Promise.reject(error);\r\n    });\r\n\r\n    return (\r\n        <authContext.Provider value={auth}>\r\n            {children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n\r\nconst useProvideAuth = () => {\r\n    const [user, setUser] = useState(getCookie('name'));\r\n\r\n    const signin = (username: string, password: string, captcha: string, success: Function, fail: Function) => {\r\n        let data = new FormData()\r\n        data.append('name', username)\r\n        data.append('password', password)\r\n        data.append('captcha', captcha)\r\n        axios({\r\n            method: 'post',\r\n            url: '/tasks/login',\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => {\r\n            // console.log(res.data)\r\n            if (res.data === 'Success') {\r\n                setUser(username);\r\n                success()\r\n            }\r\n        }).catch(rej => {\r\n            if (rej.response.status === 401) {\r\n                setUser('');\r\n                fail(rej.response.data)\r\n            }\r\n        })\r\n    };\r\n\r\n    const signout = () => {\r\n        setUser('')\r\n    }\r\n    const loginUser = (u: string) => {\r\n        setUser(u)\r\n    }\r\n\r\n    return {\r\n        user,\r\n        signin,\r\n        signout,\r\n        loginUser\r\n    };\r\n}\r\n\r\ninterface Props {\r\n    children: React.ReactNode;\r\n    path: string;\r\n    elementType?: keyof JSX.IntrinsicElements;\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }: Props) {\r\n    let auth = useAuth();\r\n    // useEffect(() => {\r\n    //     axios.get('/tasks/isLogin').then(res => {\r\n    //         auth.loginUser(res.data.result)\r\n    //     })\r\n    // })\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                auth.user ? (\r\n                    children\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport { useAuth, ProvideAuth, PrivateRoute } ","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\myAccount\\myAccount.tsx",["87","88","89","90","91","92","93"],"import { MouseEvent, useEffect, useState } from 'react'\r\nimport { Table, Tag, Space, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ninterface task {\r\n    id: number,\r\n    sitename: string,\r\n    QICQ: string,\r\n    balanceRate: string,\r\n    date: string,\r\n    percentage: string,\r\n    Appid: string,\r\n}\r\nconst Account = () => {\r\n    const history = useHistory()\r\n    const logout = (event: MouseEvent) => {\r\n        history.push('/login')\r\n    }\r\n    // useEffect(() => {\r\n    //     axios({\r\n    //         method: 'post',\r\n    //         url: '/tasks/tasklist',\r\n    //     }).then(res => {\r\n    //         setData(res.data.result)\r\n    //         // console.log(res)\r\n    //     })\r\n    // }, [])\r\n    return (\r\n        <div>\r\n            <Button type=\"primary\" onClick={logout}>退出登陆</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\taskBoard\\TaskBoard.tsx",["94","95","96","97","98","99","100"],"import { MouseEvent, useEffect, useState } from 'react'\r\nimport { Table, Upload, Space, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\r\nimport QrUpload from './QrUpload'\r\n\r\ninterface task {\r\n    id: number,\r\n    sitename: string,\r\n    QICQ: string,\r\n    balanceRate: string,\r\n    date: string,\r\n    percentage: string,\r\n    Appid: string,\r\n}\r\n\r\nconst Task = () => {\r\n    const [fileList, setFileList] = useState<UploadFile[]>([])\r\n\r\n    const columns = [\r\n        {\r\n            title: '任务名称',\r\n            dataIndex: 'sitename',\r\n            key: 'sitename',\r\n            render: (text: string) => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: '虚拟币兑换比',\r\n            dataIndex: 'balanceRate',\r\n            key: 'balanceRate',\r\n        },\r\n        {\r\n            title: '用户分成',\r\n            dataIndex: 'percentage',\r\n            key: 'percentage',\r\n        },\r\n        {\r\n            title: '添加日期',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n        },\r\n        {\r\n            title: '上传图片',\r\n            dataIndex: 'qrImage',\r\n            key: 'qrImage',\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: task) => (\r\n                <Space size=\"middle\">\r\n                    <a href={`http://proxy.xlcmll.top:36912/Task/${record.Appid}?uid=${record.Appid}`} target=\"_blank\" rel=\"noreferrer\">任务地址</a>\r\n                    {/* <a href={`http://u.zrb.net/Task/${record.Appid}?uid=${record.Appid}`} target=\"_blank\" rel=\"noreferrer\">任务地址</a> */}\r\n                    <QrUpload taskid={record.id + ''}></QrUpload>\r\n                    <a onClick={() => handleDel(record.id)}>删除</a>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const handleDel = (id: number) => {\r\n        let data = new FormData()\r\n        data.append('taskid', id + '')\r\n        axios({\r\n            method: 'post',\r\n            url: '/tasks/deltask',\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => {\r\n            if (res.data.code === 0) {\r\n                axios({\r\n                    method: 'post',\r\n                    url: '/tasks/tasklist',\r\n                }).then(res => {\r\n                    setData(res.data.result)\r\n                    // console.log(res)\r\n                })\r\n            }\r\n        })\r\n    }\r\n    const history = useHistory()\r\n    const newTask = (event: MouseEvent) => {\r\n        history.push('/user/newtask')\r\n    }\r\n    const [data, setData] = useState([])\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'post',\r\n            url: '/tasks/tasklist',\r\n        }).then(res => {\r\n            setData(res.data.result)\r\n            // console.log(res)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Button type=\"primary\" onClick={newTask}>新建任务</Button>\r\n            <Table columns={columns} dataSource={data} rowKey={'id'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\myOrder\\myOrder.tsx",["101","102","103","104","105"],"import { MouseEvent, useEffect, useState } from 'react'\r\nimport { Table, Tag, Space, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst columns = [\r\n    {\r\n        title: '时间',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n    },\r\n    {\r\n        title: '任务名',\r\n        dataIndex: 'sitename',\r\n        key: 'sitename',\r\n    },\r\n    {\r\n        title: '我的积分',\r\n        dataIndex: 'allpoints',\r\n        key: 'allpoints',\r\n    },\r\n    {\r\n        title: '用户积分',\r\n        dataIndex: 'points',\r\n        key: 'points',\r\n    },\r\n    {\r\n        title: '比例',\r\n        dataIndex: 'percentage',\r\n        key: 'percentage',\r\n    },\r\n    {\r\n        title: '订单名',\r\n        dataIndex: 'ordername',\r\n        key: 'ordername',\r\n    },\r\n];\r\n\r\ninterface order {\r\n    'Appid': string,\r\n    'date': string,\r\n    id: number,\r\n    orderid: string,\r\n    ordername: string,\r\n    percentage: string,\r\n    percentageNum: number,\r\n    points: number,\r\n    allpoints: string,\r\n    sitename: string,\r\n}\r\n\r\nconst Task = () => {\r\n    const [data, setData] = useState([])\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'post',\r\n            url: '/tasks/myorders',\r\n        }).then(res => {\r\n            console.log(res.data)\r\n            if (res.data.code === 0) {\r\n                let result = res.data.result\r\n                result.forEach((n: order) => {\r\n                    n.percentageNum = parseInt(n.percentage)\r\n                    n.allpoints = (n.points * 100 / n.percentageNum).toFixed(1)\r\n                    n.percentage += '%'\r\n                })\r\n                setData(result)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Table columns={columns} dataSource={data} rowKey={'id'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\sider\\sider.tsx",["106","107","108","109","110","111","112","113","114","115"],"import { Layout, Menu, Breadcrumb } from 'antd';\r\nimport {\r\n    DesktopOutlined,\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport { ReactElement, useEffect, useState } from 'react';\r\nimport { MenuInfo } from 'rc-menu/lib/interface'\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderLeft = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    let initKey = []\r\n    switch (location.pathname) {\r\n        case '/user/taskboard':\r\n            initKey.push('1')\r\n            break\r\n        case '/user/myorders':\r\n            initKey.push('2')\r\n            break\r\n        case '/user/account':\r\n            initKey.push('3')\r\n            break\r\n    }\r\n    const [menukey, setMenukey] = useState(initKey)\r\n\r\n    const menuClick = ({ item, key, domEvent, keyPath }: MenuInfo) => {\r\n        switch (key) {\r\n            case '1':\r\n                history.push('/user/taskboard')\r\n                break\r\n            case '2':\r\n                history.push('/user/myorders')\r\n                break\r\n            case '3':\r\n                history.push('/user/account')\r\n                break\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <Sider collapsible>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" defaultSelectedKeys={menukey} mode=\"inline\" onClick={menuClick}>\r\n                <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n                    任务\r\n                    </Menu.Item>\r\n                <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n                    订单\r\n                    </Menu.Item>\r\n                <Menu.Item key=\"3\" icon={<FileOutlined />}>\r\n                    我的账户\r\n                    </Menu.Item>\r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}\r\n\r\nexport default SiderLeft","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\newTask\\index.tsx",["116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"import { Form, Input, Button, Checkbox, message, Row, Col } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './index.css';\r\nimport { useAuth } from '../auth'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useHistory,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react';\r\n\r\ninterface FormParams {\r\n    sitename: string,\r\n    QICQ: string,\r\n    balanceName: string,\r\n    balanceRate: string,\r\n    percentage: string,\r\n}\r\nconst Login = () => {\r\n    let auth = useAuth()\r\n    let history = useHistory()\r\n\r\n    const onFinish = ({ sitename, QICQ, balanceName, balanceRate, percentage }: FormParams) => {\r\n        let data = new FormData()\r\n        data.append('sitename', sitename)\r\n        data.append('QICQ', QICQ)\r\n        data.append('balanceName', '积分')\r\n        data.append('balanceRate', '100')\r\n        data.append('percentage', percentage)\r\n        axios({\r\n            method: 'post',\r\n            url: '/tasks/newtask',\r\n            data,\r\n        }).then(res => {\r\n            if (res.data.code === 0) {\r\n                history.push('/user/taskboard')\r\n            }\r\n        })\r\n    };\r\n    let [captchaimg, setCaptchaimg] = useState<string>()\r\n    useEffect(() => {\r\n        axios.get('/tasks/getcaptcha', {\r\n            responseType: 'blob'\r\n        }).then(res => {\r\n            setCaptchaimg(URL.createObjectURL(res.data))\r\n        })\r\n    }, [])\r\n    const refresh = () => {\r\n        axios.get('/tasks/refreshcaptcha', {\r\n            responseType: 'blob'\r\n        }).then(res => {\r\n            setCaptchaimg(URL.createObjectURL(res.data))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            // className=\"login-form\"\r\n            initialValues={{\r\n                sitename: '赚点零花钱',\r\n                QICQ: '',\r\n                balanceName: '积分',\r\n                balanceRate: '100',\r\n                percentage: '90',\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                label=\"任务墙名称\"\r\n                name=\"sitename\"\r\n                rules={[{ required: true, message: '请输入任务墙名称!' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"客服QQ\"\r\n                name=\"QICQ\"\r\n                rules={[{ required: true, message: '请输入你的QQ!' }]}\r\n            >\r\n                <Input placeholder=\"请输入你的QQ\"/>\r\n            </Form.Item>\r\n            {/* <Form.Item\r\n                label=\"虚拟币单位\"\r\n                name=\"balanceName\"\r\n                rules={[{ required: true, message: '请输入虚拟币单位!' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"虚拟币兑换比\"\r\n                name=\"balanceRate\"\r\n                rules={[{ required: true, message: '请输入虚拟币兑换比!' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item> */}\r\n            <Form.Item\r\n                label=\"用户分成比例\"\r\n                name=\"percentage\"\r\n                rules={[{ required: true, message: '请输入用户分成比例!' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    提交\r\n            </Button>\r\n                {/* Or <a href=\"\">register now!</a> */}\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\taskBoard\\QrUpload.tsx",["130","131","132","133","134"],"import { Table, Upload, Space, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\r\nimport { MouseEvent, useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst QrUpload = (props: { taskid: string; }) => {\r\n    const [fileList, setFileList] = useState<UploadFile[]>([])\r\n\r\n    return (\r\n        <Upload\r\n            name=\"avatar\"\r\n            beforeUpload={() => false}\r\n            fileList={fileList}\r\n            onChange={(info) => {\r\n\r\n                setFileList([info.file])\r\n                let data = new FormData()\r\n                data.append('taskid', props.taskid + '');\r\n                data.append('filename', info.file.name);\r\n                // @ts-ignore zhushi\r\n                data.append('qrimage', info.file);\r\n                axios({\r\n                    method: 'post',\r\n                    url: '/tasks/addqrimage',\r\n                    data,\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }).then(res => {\r\n                    if (res.data.code === 0) {\r\n\r\n                    }\r\n                })\r\n            }}>\r\n            <Button icon={<UploadOutlined />}>上传二维码</Button>\r\n        </Upload>\r\n    )\r\n}\r\n\r\nexport default QrUpload","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\loginUser\\loginUser.tsx",["135","136","137","138","139","140","141","142","143","144","145","146"],"import { Form, Input, Button, Checkbox, message, Row, Col } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './login.css';\r\nimport { useAuth } from '../auth'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useHistory,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst Login = () => {\r\n    let auth = useAuth()\r\n    let history = useHistory()\r\n\r\n    const onFinish = ({ username, password }: { username: string, password: string }) => {\r\n        let data = new FormData()\r\n        data.append('name', username)\r\n        data.append('password', password)\r\n        let params = new URL(document.location.href).searchParams\r\n        const appid = params.get('appid')\r\n        axios({\r\n            method: 'post',\r\n            url: '/tasks/loginuser',\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => {\r\n            // console.log(res.data)\r\n            if (res.data) {\r\n                if (res.data.code === 1) {\r\n                    message.error('密码错误')\r\n                } else if (res.data.code === 0) {\r\n                    document.location.href = `http://proxy.xlcmll.top:36912/Task/${appid}?uid=${res.data.result}`\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                rules={[{ required: true, message: '请输入您的账号!' }]}\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"账号\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[{ required: true, message: '请输入您的密码!' }]}\r\n            >\r\n                <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item>\r\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                    <Checkbox>Remember me</Checkbox>\r\n                </Form.Item>\r\n\r\n                <a className=\"login-form-forgot\" href=\"\">\r\n                    Forgot password\r\n            </a>\r\n            </Form.Item> */}\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    登陆/注册\r\n            </Button>\r\n                <p style={{ color: 'red' }}>请使用固定的账号密码登陆，新账号将自动注册并登陆!</p>\r\n                {/* Or <a href=\"\">register now!</a> */}\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\login\\login.tsx",["147","148","149","150","151","152","153"],"C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\myOrder\\myOrder2.tsx",["154","155","156","157","158"],"import { MouseEvent, useEffect, useState } from 'react'\r\nimport { Table, Tag, Space, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst columns = [\r\n    {\r\n        title: '时间',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n    },\r\n    {\r\n        title: '任务名',\r\n        dataIndex: 'sitename',\r\n        key: 'sitename',\r\n    },\r\n    {\r\n        title: '我的积分',\r\n        dataIndex: 'points',\r\n        key: 'points',\r\n    },\r\n    {\r\n        title: '用户名',\r\n        dataIndex: 'playername',\r\n        key: 'playername',\r\n    },\r\n    {\r\n        title: '订单名',\r\n        dataIndex: 'ordername',\r\n        key: 'ordername',\r\n    },\r\n];\r\n\r\ninterface order {\r\n    'Appid': string,\r\n    'date': string,\r\n    id: number,\r\n    orderid: string,\r\n    ordername: string,\r\n    percentage: string,\r\n    percentageNum: number,\r\n    points: number,\r\n    pointsShare: string,\r\n    sitename: string,\r\n}\r\n\r\nconst Task = () => {\r\n    const [data, setData] = useState([])\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'post',\r\n            url: '/tasks/myorders2',\r\n        }).then(res => {\r\n            console.log(res.data)\r\n            if (res.data.code === 0) {\r\n                let result = res.data.result\r\n                result.forEach((n: order) => {\r\n                    n.percentageNum = parseInt(n.percentage)\r\n                    n.percentage += '%'\r\n                })\r\n                setData(result)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Table columns={columns} dataSource={data} rowKey={'id'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","C:\\Users\\jie\\Documents\\git\\docker\\rwb-fe\\src\\pages\\players\\players.tsx",["159","160","161","162","163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":30},{"ruleId":"168","severity":1,"message":"172","line":1,"column":32,"nodeType":"170","messageId":"171","endLine":1,"endColumn":42},{"ruleId":"168","severity":1,"message":"173","line":8,"column":3,"nodeType":"170","messageId":"171","endLine":8,"endColumn":16},{"ruleId":"168","severity":1,"message":"174","line":15,"column":16,"nodeType":"170","messageId":"171","endLine":15,"endColumn":21},{"ruleId":"168","severity":1,"message":"175","line":1,"column":18,"nodeType":"170","messageId":"171","endLine":1,"endColumn":22},{"ruleId":"168","severity":1,"message":"176","line":1,"column":24,"nodeType":"170","messageId":"171","endLine":1,"endColumn":34},{"ruleId":"168","severity":1,"message":"177","line":10,"column":17,"nodeType":"170","messageId":"171","endLine":10,"endColumn":20},{"ruleId":"168","severity":1,"message":"178","line":1,"column":32,"nodeType":"170","messageId":"171","endLine":1,"endColumn":41},{"ruleId":"168","severity":1,"message":"179","line":3,"column":22,"nodeType":"170","messageId":"171","endLine":3,"endColumn":28},{"ruleId":"168","severity":1,"message":"180","line":4,"column":5,"nodeType":"170","messageId":"171","endLine":4,"endColumn":11},{"ruleId":"168","severity":1,"message":"181","line":6,"column":5,"nodeType":"170","messageId":"171","endLine":6,"endColumn":9},{"ruleId":"168","severity":1,"message":"182","line":7,"column":5,"nodeType":"170","messageId":"171","endLine":7,"endColumn":15},{"ruleId":"168","severity":1,"message":"178","line":1,"column":22,"nodeType":"170","messageId":"171","endLine":1,"endColumn":31},{"ruleId":"168","severity":1,"message":"183","line":1,"column":33,"nodeType":"170","messageId":"171","endLine":1,"endColumn":41},{"ruleId":"168","severity":1,"message":"184","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":15},{"ruleId":"168","severity":1,"message":"185","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":20},{"ruleId":"168","severity":1,"message":"174","line":2,"column":22,"nodeType":"170","messageId":"171","endLine":2,"endColumn":27},{"ruleId":"168","severity":1,"message":"186","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":13},{"ruleId":"168","severity":1,"message":"187","line":6,"column":11,"nodeType":"170","messageId":"171","endLine":6,"endColumn":15},{"ruleId":"168","severity":1,"message":"188","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":23},{"ruleId":"168","severity":1,"message":"189","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":24},{"ruleId":"168","severity":1,"message":"190","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":27},{"ruleId":"168","severity":1,"message":"191","line":20,"column":12,"nodeType":"170","messageId":"171","endLine":20,"endColumn":20},{"ruleId":"168","severity":1,"message":"192","line":20,"column":22,"nodeType":"170","messageId":"171","endLine":20,"endColumn":33},{"ruleId":"193","severity":1,"message":"194","line":27,"column":39,"nodeType":"195","endLine":27,"endColumn":42},{"ruleId":"193","severity":1,"message":"194","line":58,"column":21,"nodeType":"195","endLine":58,"endColumn":61},{"ruleId":"168","severity":1,"message":"196","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":20},{"ruleId":"168","severity":1,"message":"185","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":20},{"ruleId":"168","severity":1,"message":"174","line":2,"column":22,"nodeType":"170","messageId":"171","endLine":2,"endColumn":27},{"ruleId":"168","severity":1,"message":"197","line":2,"column":29,"nodeType":"170","messageId":"171","endLine":2,"endColumn":35},{"ruleId":"168","severity":1,"message":"182","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":20},{"ruleId":"168","severity":1,"message":"176","line":1,"column":24,"nodeType":"170","messageId":"171","endLine":1,"endColumn":34},{"ruleId":"168","severity":1,"message":"198","line":6,"column":5,"nodeType":"170","messageId":"171","endLine":6,"endColumn":17},{"ruleId":"168","severity":1,"message":"199","line":7,"column":5,"nodeType":"170","messageId":"171","endLine":7,"endColumn":17},{"ruleId":"168","severity":1,"message":"200","line":9,"column":10,"nodeType":"170","messageId":"171","endLine":9,"endColumn":22},{"ruleId":"168","severity":1,"message":"178","line":9,"column":24,"nodeType":"170","messageId":"171","endLine":9,"endColumn":33},{"ruleId":"168","severity":1,"message":"201","line":13,"column":9,"nodeType":"170","messageId":"171","endLine":13,"endColumn":15},{"ruleId":"168","severity":1,"message":"202","line":13,"column":17,"nodeType":"170","messageId":"171","endLine":13,"endColumn":24},{"ruleId":"168","severity":1,"message":"203","line":13,"column":26,"nodeType":"170","messageId":"171","endLine":13,"endColumn":32},{"ruleId":"168","severity":1,"message":"204","line":14,"column":9,"nodeType":"170","messageId":"171","endLine":14,"endColumn":16},{"ruleId":"168","severity":1,"message":"205","line":32,"column":21,"nodeType":"170","messageId":"171","endLine":32,"endColumn":31},{"ruleId":"168","severity":1,"message":"206","line":1,"column":31,"nodeType":"170","messageId":"171","endLine":1,"endColumn":39},{"ruleId":"168","severity":1,"message":"207","line":1,"column":41,"nodeType":"170","messageId":"171","endLine":1,"endColumn":48},{"ruleId":"168","severity":1,"message":"208","line":1,"column":50,"nodeType":"170","messageId":"171","endLine":1,"endColumn":53},{"ruleId":"168","severity":1,"message":"209","line":1,"column":55,"nodeType":"170","messageId":"171","endLine":1,"endColumn":58},{"ruleId":"168","severity":1,"message":"199","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":22},{"ruleId":"168","severity":1,"message":"210","line":2,"column":24,"nodeType":"170","messageId":"171","endLine":2,"endColumn":36},{"ruleId":"168","severity":1,"message":"179","line":6,"column":22,"nodeType":"170","messageId":"171","endLine":6,"endColumn":28},{"ruleId":"168","severity":1,"message":"180","line":7,"column":5,"nodeType":"170","messageId":"171","endLine":7,"endColumn":11},{"ruleId":"168","severity":1,"message":"211","line":8,"column":5,"nodeType":"170","messageId":"171","endLine":8,"endColumn":10},{"ruleId":"168","severity":1,"message":"181","line":9,"column":5,"nodeType":"170","messageId":"171","endLine":9,"endColumn":9},{"ruleId":"168","severity":1,"message":"212","line":11,"column":5,"nodeType":"170","messageId":"171","endLine":11,"endColumn":13},{"ruleId":"168","severity":1,"message":"213","line":24,"column":9,"nodeType":"170","messageId":"171","endLine":24,"endColumn":13},{"ruleId":"168","severity":1,"message":"214","line":44,"column":10,"nodeType":"170","messageId":"171","endLine":44,"endColumn":20},{"ruleId":"168","severity":1,"message":"215","line":52,"column":11,"nodeType":"170","messageId":"171","endLine":52,"endColumn":18},{"ruleId":"168","severity":1,"message":"184","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":15},{"ruleId":"168","severity":1,"message":"174","line":1,"column":25,"nodeType":"170","messageId":"171","endLine":1,"endColumn":30},{"ruleId":"168","severity":1,"message":"190","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":27},{"ruleId":"168","severity":1,"message":"196","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":20},{"ruleId":"168","severity":1,"message":"178","line":4,"column":22,"nodeType":"170","messageId":"171","endLine":4,"endColumn":31},{"ruleId":"168","severity":1,"message":"206","line":1,"column":31,"nodeType":"170","messageId":"171","endLine":1,"endColumn":39},{"ruleId":"168","severity":1,"message":"208","line":1,"column":50,"nodeType":"170","messageId":"171","endLine":1,"endColumn":53},{"ruleId":"168","severity":1,"message":"209","line":1,"column":55,"nodeType":"170","messageId":"171","endLine":1,"endColumn":58},{"ruleId":"168","severity":1,"message":"179","line":6,"column":22,"nodeType":"170","messageId":"171","endLine":6,"endColumn":28},{"ruleId":"168","severity":1,"message":"180","line":7,"column":5,"nodeType":"170","messageId":"171","endLine":7,"endColumn":11},{"ruleId":"168","severity":1,"message":"211","line":8,"column":5,"nodeType":"170","messageId":"171","endLine":8,"endColumn":10},{"ruleId":"168","severity":1,"message":"181","line":9,"column":5,"nodeType":"170","messageId":"171","endLine":9,"endColumn":9},{"ruleId":"168","severity":1,"message":"212","line":11,"column":5,"nodeType":"170","messageId":"171","endLine":11,"endColumn":13},{"ruleId":"168","severity":1,"message":"183","line":14,"column":10,"nodeType":"170","messageId":"171","endLine":14,"endColumn":18},{"ruleId":"168","severity":1,"message":"178","line":14,"column":20,"nodeType":"170","messageId":"171","endLine":14,"endColumn":29},{"ruleId":"168","severity":1,"message":"213","line":18,"column":9,"nodeType":"170","messageId":"171","endLine":18,"endColumn":13},{"ruleId":"168","severity":1,"message":"216","line":19,"column":9,"nodeType":"170","messageId":"171","endLine":19,"endColumn":16},{"ruleId":"168","severity":1,"message":"206","line":1,"column":31,"nodeType":"170","messageId":"171","endLine":1,"endColumn":39},{"ruleId":"168","severity":1,"message":"179","line":6,"column":22,"nodeType":"170","messageId":"171","endLine":6,"endColumn":28},{"ruleId":"168","severity":1,"message":"180","line":7,"column":5,"nodeType":"170","messageId":"171","endLine":7,"endColumn":11},{"ruleId":"168","severity":1,"message":"211","line":8,"column":5,"nodeType":"170","messageId":"171","endLine":8,"endColumn":10},{"ruleId":"168","severity":1,"message":"181","line":9,"column":5,"nodeType":"170","messageId":"171","endLine":9,"endColumn":9},{"ruleId":"168","severity":1,"message":"212","line":11,"column":5,"nodeType":"170","messageId":"171","endLine":11,"endColumn":13},{"ruleId":"217","severity":1,"message":"218","line":108,"column":25,"nodeType":"195","endLine":108,"endColumn":65},{"ruleId":"168","severity":1,"message":"196","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":20},{"ruleId":"168","severity":1,"message":"185","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":20},{"ruleId":"168","severity":1,"message":"174","line":2,"column":22,"nodeType":"170","messageId":"171","endLine":2,"endColumn":27},{"ruleId":"168","severity":1,"message":"197","line":2,"column":29,"nodeType":"170","messageId":"171","endLine":2,"endColumn":35},{"ruleId":"168","severity":1,"message":"182","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":20},{"ruleId":"168","severity":1,"message":"196","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":20},{"ruleId":"168","severity":1,"message":"185","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":20},{"ruleId":"168","severity":1,"message":"174","line":2,"column":22,"nodeType":"170","messageId":"171","endLine":2,"endColumn":27},{"ruleId":"168","severity":1,"message":"197","line":2,"column":29,"nodeType":"170","messageId":"171","endLine":2,"endColumn":35},{"ruleId":"168","severity":1,"message":"182","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":20},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'BrowserRouter' is defined but never used.","'Space' is defined but never used.","'Menu' is defined but never used.","'Breadcrumb' is defined but never used.","'url' is assigned a value but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'useState' is defined but never used.","'Table' is defined but never used.","'Tag' is defined but never used.","'axios' is defined but never used.","'task' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'UploadChangeParam' is defined but never used.","'fileList' is assigned a value but never used.","'setFileList' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MouseEvent' is defined but never used.","'Button' is defined but never used.","'TeamOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'ReactElement' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'setMenukey' is assigned a value but never used.","'Checkbox' is defined but never used.","'message' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'LockOutlined' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'auth' is assigned a value but never used.","'captchaimg' is assigned a value but never used.","'refresh' is assigned a value but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]